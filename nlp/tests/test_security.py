# nlp/tests/test_security.py

from core.security import anonimizar_texto


def test_anonimizar_texto_mismo_input_mismo_hash():
    """El mismo texto debe generar siempre el mismo hash."""
    texto = "Me siento bien"
    hash1 = anonimizar_texto(texto)
    hash2 = anonimizar_texto(texto)
    assert hash1 == hash2, "[Error] El mismo texto deber√≠a producir el mismo hash."
    print("‚úÖ Test 1: Mismo input ‚Üí mismo hash: OK")


def test_anonimizar_texto_diferente_input_diferente_hash():
    """Textos diferentes deben producir hashes diferentes."""
    texto1 = "Me siento bien"
    texto2 = "Me siento mal"
    hash1 = anonimizar_texto(texto1)
    hash2 = anonimizar_texto(texto2)
    assert hash1 != hash2, "[Error] Textos distintos deber√≠an producir hashes distintos."
    print("‚úÖ Test 2: Diferente input ‚Üí diferente hash: OK")


def test_anonimizar_texto_normalizacion():
    """Hashing debe ser consistente ignorando espacios o may√∫sculas."""
    texto1 = "Me siento BIEN"
    texto2 = "   me siento bien   "
    hash1 = anonimizar_texto(texto1.strip().lower())
    hash2 = anonimizar_texto(texto2.strip().lower())
    assert hash1 == hash2, "[Error] El hashing debe ser independiente de may√∫sculas y espacios."
    print("‚úÖ Test 3: Normalizaci√≥n espacios/may√∫sculas: OK")


def test_anonimizar_texto_input_vacio():
    """Debe lanzar un error si el texto de entrada est√° vac√≠o."""
    try:
        anonimizar_texto("")
        assert False, "[Error] Deber√≠a lanzar ValueError si el texto est√° vac√≠o."
    except ValueError:
        print("‚úÖ Test 4: Input vac√≠o lanza ValueError: OK")


# Ejecutar todos los tests manualmente
if __name__ == "__main__":
    print("\nüöÄ Iniciando tests de Seguridad (Anonimizaci√≥n de Texto)...\n")

    test_anonimizar_texto_mismo_input_mismo_hash()
    test_anonimizar_texto_diferente_input_diferente_hash()
    test_anonimizar_texto_normalizacion()
    test_anonimizar_texto_input_vacio()

    print("\nüéØ Todos los tests de Seguridad completados exitosamente.\n")
